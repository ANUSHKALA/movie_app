import type { NextPage } from 'next'
import Head from 'next/head'
import Card from "../components/Card";
import {useEffect, useState} from "react";
import Link from "next/link";


export async function getStaticProps(){
    const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=1000 0&offset=0")
    const resJ = await res.json();
    const rel = resJ.results;
    return{
        props: {rel}
    }
}

const Home: NextPage = (props) => {

    // console.log(props);
    const [data,setData] = useState([]);
    const [search,setSearch] = useState("");
    const fetchPokemon = () => {
        setData([]);
        // @ts-ignore
        (props.rel).map((el:{},index:number) => {
            // @ts-ignore
            fetch(el.url)
                .then(res => res.json())
                .then(res => setData((pre) => [...pre,res]))
        })
    }

    useEffect(fetchPokemon,[])

    // console.log(data)

    function handleChange(e: React.FormEvent<HTMLInputElement>) {
        // @ts-ignore
        setSearch(e.target.value);
        // console.log(search);

    }

    return (
    <div >
      <Head>
        <title>POKEDEX APP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gray-500 w-screen no-scrollbar">
          <div className="bg-gray-400 w-screen  justify-items-center pb-3 h-fit grid">
              <h1 className="text-6xl text-center mt-7 pb-4 font-bold text-gray-800">
                  <Link href="/">
                      POKEDEX
                  </Link>
              </h1>
              <div className="justify-center">
                  <form>
                      <input className=" my-3 px-4 rounded-3xl" placeholder="Search..."  onChange={handleChange}/>
                  </form>
              </div>
          </div>
          <div className="flex flex-wrap justify-center mx-auto mt-5 ">
              {    // @ts-ignore
                  data
                      .filter(info =>
                        info.name.toLowerCase().includes(search.toLowerCase())
                      )
                      .map((el:any,index:number) => {
                      let abArr:[] = [];
                      el.abilities.map((el:{},index:number) => {
                          // @ts-ignore
                          abArr.push(el.ability.name);
                      })
                          // console.log(abArr)
                  return(
                      <div key={index} className="mx-3 w-40 rounded-xl my-2 bg-gray-400 overflow-hidden">
                          <
                              // @ts-ignore
                              Card name={el.name} id={el.id} image={
                                  "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/"+el.id+".gif"} type={el.types[0].type.name
                              // "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/"+el.id+".svg"
                              } abilitiesArray={abArr}  height={el.height} weight={el.weight} />
                      </div>
                  )
              })}
          </div>
      </main>
    </div>
  )
}

export default Home